# VIRTUALIZATION SUPPORT

#--INSTALL

### MINIMAL
sudo pacman -S --noconfirm qemu-base edk2-ovmf qemu-ui-sdl

### FULL
sudo pacman -S dnsmasq virt-manager qemu-base ebtables edk2-ovmf qemu-ui-sdl
sudo usermod -G libvirt -a "$USER"
sudo systemctl start libvirtd


#--UNINSTALL
sudo pacman -Rns dnsmasq virt-manager qemu-base edk2-ovmf qemu-ui-sdl
sudo gpasswd -d "$USER" libvirt

# BOOT VIRTUAL MACHINE
# Help : http://odi.ch/prog/uefi.php
# Help : https://wiki.qemu.org/Hosts/BSD

qemu-img create -f qcow2 Image.img 20G

qemu-system-x86_64 -enable-kvm \
	-bios /usr/share/edk2-ovmf/x64/OVMF_CODE.fd \
	-machine q35,accel=kvm,smm=on \
	-cpu host \
	-boot menu=on \
	-global driver=cfi.pflash01,property=secure,value=on \
	-drive if=pflash,format=raw,unit=0,file=/usr/share/edk2-ovmf/x64/OVMF_CODE.fd,readonly=on \
	-drive if=pflash,format=raw,unit=1,file=OVMF_VARS.fd \
	-boot menu=on \
	-drive file=Image.img \
	-m 8G \
	-smp 6 \
	-vga virtio \
	-display sdl,gl=on \
	-cdrom ISO_NAME


# UNINSTALL NNN FM

sudo rm -rf /usr/local/bin/nnn
sudo rm -rf /usr/local/share/man/man1/nnn.1
sudo rm -rf .config/nnn

# UNINSTALL NEOVIM

sudo rm /usr/local/bin/nvim
sudo rm -r /usr/local/share/nvim/
